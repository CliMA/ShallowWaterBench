function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(TotallyNotApproxFun.sproduct), Tuple{StaticArrays.SArray{Tuple{4}, Float64, 1, 4}, StaticArrays.SArray{Tuple{4}, Float64, 1, 4}}})
    precompile(Tuple{typeof(TotallyNotApproxFun.sproduct), Tuple{TotallyNotApproxFun.LobattoPoints{Float64, 4}, TotallyNotApproxFun.LobattoPoints{Float64, 4}}})
    precompile(Tuple{typeof(TotallyNotApproxFun._mapslices_exposition), Base.Val{2}, getfield(TotallyNotApproxFun, Symbol("##72#74")){TotallyNotApproxFun.LagrangeBasis{Float64, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}}}, StaticArrays.SArray{Tuple{2, 2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 2, 4}})
    precompile(Tuple{typeof(TotallyNotApproxFun.∫∇Ψ), TotallyNotApproxFun.ComboFun{StaticArrays.SArray{Tuple{2, 2}, Float64, 2, 4}, 2, TotallyNotApproxFun.ProductBasis{Float64, 2, Tuple{TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}, TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}}}, StaticArrays.SArray{Tuple{4, 4}, StaticArrays.SArray{Tuple{2, 2}, Float64, 2, 4}, 2, 16}}})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#54")), Int, Int, Int, Int, Int, Int})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#6")), Int, Int, Int, Type{Int}, Int, Int})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##3#5")), Tuple{Int64, Expr}})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#47")), Int, Int, Int, Int})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##3#5")), Tuple{Expr, Int64}})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##3#5")), Tuple{Expr}})
    precompile(Tuple{typeof(TotallyNotApproxFun.∫∇Ψ), TotallyNotApproxFun.ComboFun{StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 2, TotallyNotApproxFun.ProductBasis{Float64, 2, Tuple{TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}, TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}}}, StaticArrays.SArray{Tuple{4, 4}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 2, 16}}})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##49#52")), Int64})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##55#58")), Int64})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#1")), Int, Int, Int, Int, Int})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##57#60")), Int64})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##48#51")), Int64})
    precompile(Tuple{typeof(TotallyNotApproxFun.∫Ψ), TotallyNotApproxFun.ComboFun{Float64, 2, TotallyNotApproxFun.ProductBasis{Float64, 2, Tuple{TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}, TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}}}, StaticArrays.SArray{Tuple{4, 4}, Float64, 2, 16}}})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#16")), Int, Int, Int, Int})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##56#59")), Int64})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#11")), Int, Int, Int, Int})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##50#53")), Int64})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#61")), Int, Int, Int, Int, Int})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##12#14")), Tuple{Int64, DataType}})
    precompile(Tuple{typeof(TotallyNotApproxFun._cat), Base.Val{2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#89")), Int, Int, Int, Int})
    precompile(Tuple{typeof(TotallyNotApproxFun._cat), Base.Val{2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#66")), Int, Int, Int, Int})
    precompile(Tuple{typeof(TotallyNotApproxFun.include), String})
    precompile(Tuple{getfield(TotallyNotApproxFun, Symbol("##s112#67")), Int, Int, Int, Int, Int})
    precompile(Tuple{typeof(TotallyNotApproxFun.approximate), typeof(identity), TotallyNotApproxFun.ProductBasis{Float64, 2, Tuple{TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}, TotallyNotApproxFun.LagrangeBasis{Float64, TotallyNotApproxFun.LobattoPoints{Float64, 4}}}}})
    precompile(Tuple{typeof(TotallyNotApproxFun.MultilinearFun), Base.IteratorsMD.CartesianIndex{2}, Base.IteratorsMD.CartesianIndex{2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}})
    precompile(Tuple{typeof(TotallyNotApproxFun.∇), TotallyNotApproxFun.ComboFun{StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 2, TotallyNotApproxFun.ProductBasis{Float64, 2, Tuple{TotallyNotApproxFun.LagrangeBasis{Float64, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}}, TotallyNotApproxFun.LagrangeBasis{Float64, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}}}}, StaticArrays.SArray{Tuple{2, 2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 2, 4}}})
    precompile(Tuple{typeof(TotallyNotApproxFun._mapslices_exposition), Base.Val{1}, getfield(TotallyNotApproxFun, Symbol("##72#74")){TotallyNotApproxFun.LagrangeBasis{Float64, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}}}, StaticArrays.SArray{Tuple{2, 2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 2, 4}})
    precompile(Tuple{typeof(TotallyNotApproxFun.∇), TotallyNotApproxFun.ComboFun{StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 1, TotallyNotApproxFun.ProductBasis{Float64, 1, Tuple{TotallyNotApproxFun.LagrangeBasis{Float64, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}}}}, StaticArrays.SArray{Tuple{2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 1, 2}}})
    precompile(Tuple{typeof(TotallyNotApproxFun._mapslices_exposition), Base.Val{1}, getfield(TotallyNotApproxFun, Symbol("##72#74")){TotallyNotApproxFun.LagrangeBasis{Float64, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}}}, StaticArrays.SArray{Tuple{2}, StaticArrays.SArray{Tuple{2}, Float64, 1, 2}, 1, 2}})
end
